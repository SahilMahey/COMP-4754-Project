{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Harsimran/movie_rec/src/app/profile/page.js"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from 'react';\r\n\r\nexport default function ProfilePage() {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isSignup, setIsSignup] = useState(false);\r\n    const [userInfo, setUserInfo] = useState(null);\r\n    const [credentials, setCredentials] = useState({\r\n        username: '',\r\n        password: '',\r\n    });\r\n\r\n    const handleInputChange = (e) => {\r\n        setCredentials({\r\n            ...credentials,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        // Mock authentication (replace with API call)\r\n        if (credentials.username === 'user' && credentials.password === 'password') {\r\n            setUserInfo({ username: 'user' });\r\n            setIsLoggedIn(true);\r\n        } else {\r\n            alert('Invalid credentials');\r\n        }\r\n    };\r\n\r\n    const handleSignup = () => {\r\n        // Mock signup (replace with API call)\r\n        if (credentials.username && credentials.password) {\r\n            setUserInfo({ username: credentials.username });\r\n            setIsLoggedIn(true);\r\n            setIsSignup(false);\r\n        } else {\r\n            alert('Please fill out all fields');\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        setIsLoggedIn(false);\r\n        setUserInfo(null);\r\n        setCredentials({ username: '', password: '' });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile Page</h1>\r\n\r\n            {!isLoggedIn ? (\r\n                <div>\r\n                    {isSignup ? (\r\n                        <div>\r\n                            <h2>Signup</h2>\r\n                            <label>\r\n                                Username:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    value={credentials.username}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </label>\r\n                            <label>\r\n                                Password:\r\n                                <input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    value={credentials.password}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </label>\r\n                            <button onClick={handleSignup}>Sign Up</button>\r\n                            <p>\r\n                                Already have an account?{' '}\r\n                                <button onClick={() => setIsSignup(false)}>Log In</button>\r\n                            </p>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <h2>Login</h2>\r\n                            <label>\r\n                                Username:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"username\"\r\n                                    value={credentials.username}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </label>\r\n                            <label>\r\n                                Password:\r\n                                <input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    value={credentials.password}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </label>\r\n                            <button onClick={handleLogin}>Log In</button>\r\n                            <p>\r\n                                Don't have an account?{' '}\r\n                                <button onClick={() => setIsSignup(true)}>Sign Up</button>\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h2>Welcome, {userInfo.username}</h2>\r\n                    <button onClick={handleLogout}>Log Out</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACpB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAC3C,UAAU;QACV,UAAU;IACd;IAEA,MAAM,oBAAoB,CAAC;QACvB,eAAe;YACX,GAAG,WAAW;YACd,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QACnC;IACJ;IAEA,MAAM,cAAc;QAChB,8CAA8C;QAC9C,IAAI,YAAY,QAAQ,KAAK,UAAU,YAAY,QAAQ,KAAK,YAAY;YACxE,YAAY;gBAAE,UAAU;YAAO;YAC/B,cAAc;QAClB,OAAO;YACH,MAAM;QACV;IACJ;IAEA,MAAM,eAAe;QACjB,sCAAsC;QACtC,IAAI,YAAY,QAAQ,IAAI,YAAY,QAAQ,EAAE;YAC9C,YAAY;gBAAE,UAAU,YAAY,QAAQ;YAAC;YAC7C,cAAc;YACd,YAAY;QAChB,OAAO;YACH,MAAM;QACV;IACJ;IAEA,MAAM,eAAe;QACjB,cAAc;QACd,YAAY;QACZ,eAAe;YAAE,UAAU;YAAI,UAAU;QAAG;IAChD;IAEA,qBACI,8OAAC;;0BACG,8OAAC;0BAAG;;;;;;YAEH,CAAC,2BACE,8OAAC;0BACI,yBACG,8OAAC;;sCACG,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;;gCAAM;8CAEH,8OAAC;oCACG,MAAK;oCACL,MAAK;oCACL,OAAO,YAAY,QAAQ;oCAC3B,UAAU;;;;;;;;;;;;sCAGlB,8OAAC;;gCAAM;8CAEH,8OAAC;oCACG,MAAK;oCACL,MAAK;oCACL,OAAO,YAAY,QAAQ;oCAC3B,UAAU;;;;;;;;;;;;sCAGlB,8OAAC;4BAAO,SAAS;sCAAc;;;;;;sCAC/B,8OAAC;;gCAAE;gCAC0B;8CACzB,8OAAC;oCAAO,SAAS,IAAM,YAAY;8CAAQ;;;;;;;;;;;;;;;;;yCAInD,8OAAC;;sCACG,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;;gCAAM;8CAEH,8OAAC;oCACG,MAAK;oCACL,MAAK;oCACL,OAAO,YAAY,QAAQ;oCAC3B,UAAU;;;;;;;;;;;;sCAGlB,8OAAC;;gCAAM;8CAEH,8OAAC;oCACG,MAAK;oCACL,MAAK;oCACL,OAAO,YAAY,QAAQ;oCAC3B,UAAU;;;;;;;;;;;;sCAGlB,8OAAC;4BAAO,SAAS;sCAAa;;;;;;sCAC9B,8OAAC;;gCAAE;gCACwB;8CACvB,8OAAC;oCAAO,SAAS,IAAM,YAAY;8CAAO;;;;;;;;;;;;;;;;;;;;;;qCAM1D,8OAAC;;kCACG,8OAAC;;4BAAG;4BAAU,SAAS,QAAQ;;;;;;;kCAC/B,8OAAC;wBAAO,SAAS;kCAAc;;;;;;;;;;;;;;;;;;AAKnD"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Harsimran/movie_rec/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}